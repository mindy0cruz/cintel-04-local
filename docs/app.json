[{"name": "app.py", "content": "import plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom shiny import App, ui, render, reactive, req\nfrom shinywidgets import output_widget, render_plotly\nfrom palmerpenguins import load_penguins\n\npenguins_df = load_penguins()\n\napp_ui = ui.page_fluid(\n    ui.page_auto(title=\"Mindy's Penguin Data\", fillable=True),\n\n    ui.layout_sidebar(\n        ui.sidebar(\n            ui.h2(\"Sidebar\"),\n            ui.input_selectize(\n                \"selected_attribute\",\n                \"Select Attribute:\",\n                [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n            ),\n            ui.input_numeric(\n                \"plotly_bin_count\",\n                \"Plotly Histogram Bins:\",\n                value=15,\n            ),\n            ui.input_slider(\n                \"seaborn_bin_count\",\n                \"Seaborn Histogram Bins:\",\n                min=5,\n                max=50,\n                value=28,\n            ),\n            ui.input_checkbox_group(\n                \"selected_species_list\",\n                \"Species Type:\",\n                [\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n                selected=[\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n                inline=True,\n            ),\n            ui.hr(),\n            ui.a(\n                \"GitHub Link\",\n                href=\"https://github.com/nwn8/cintel-03-reactive/blob/main/app.py\",\n                target=\"_blank\",\n            ),\n            open=\"open\"\n        ),\n        ui.layout_columns(\n            ui.output_data_frame(\"data_table\"),\n            ui.output_data_frame(\"data_grid\"),\n        ),\n        ui.layout_columns(\n            output_widget(\"plotly_histogram\"),\n            ui.output_plot(\"seaborn_histogram\"),\n        ),\n        ui.card(\n            ui.card_header(\"Plotly Scatterplot: Species\"),\n            output_widget(\"plotly_scatterplot\"),\n            full_screen=True,\n        ),\n    )\n)\n\n# --------------------------------------------------------\n# Reactive calculations and effects\n# --------------------------------------------------------\n\n# Add a reactive calculation to filter the data\n# By decorating the function with @reactive, we can use the function to filter the data\n# The function will be called whenever an input functions used to generate that output changes.\n# Any output that depends on the reactive function (e.g., filtered_data()) will be updated when the data changes.\n\ndef server(input, output, session):\n    @reactive.calc\n    def filtered_data():\n        from shiny import req\n        req(input.selected_species_list())\n        return penguins_df[penguins_df[\"species\"].isin(input.selected_species_list())]\n\n    @render.data_frame\n    def data_table():\n        return filtered_data()\n\n    @render.data_frame\n    def data_grid():\n        return filtered_data()\n\n    @render_plotly\n    def plotly_histogram():\n        col = input.selected_attribute()\n        bins = input.plotly_bin_count()\n        return px.histogram(filtered_data(), x=col, nbins=bins, color=\"species\", title=\"Plotly Histogram\")\n\n    @render.plot\n    def seaborn_histogram():\n        col = input.selected_attribute()\n        bins = input.seaborn_bin_count()\n        fig, ax = plt.subplots()\n        sns.histplot(data=filtered_data(), x=col, bins=bins, kde=True, hue=\"species\", ax=ax)\n        ax.set_title(\"Seaborn Histogram\")\n        return fig\n\n    @render_plotly\n    def plotly_scatterplot():\n        return px.scatter(\n            filtered_data(),\n            x=\"flipper_length_mm\",\n            y=\"body_mass_g\",\n            color=\"species\",\n            hover_data=[\"island\"],\n            title=\"Plotly Scatterplot: Species\",\n            labels={\n                \"flipper_length_mm\": \"Flipper Length (mm)\",\n                \"body_mass_g\": \"Body Mass (g)\",\n            },\n        )\n\n    \napp = App(app_ui, server)\n", "type": "text"}]